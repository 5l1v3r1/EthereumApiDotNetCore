// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace EthereumSamuraiApiCaller.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class TransactionFullInfoResponse
    {
        /// <summary>
        /// Initializes a new instance of the TransactionFullInfoResponse
        /// class.
        /// </summary>
        public TransactionFullInfoResponse()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TransactionFullInfoResponse
        /// class.
        /// </summary>
        public TransactionFullInfoResponse(TransactionResponse transaction = default(TransactionResponse), IList<Erc20TransferHistoryResponse> erc20Transfers = default(IList<Erc20TransferHistoryResponse>))
        {
            Transaction = transaction;
            Erc20Transfers = erc20Transfers;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Transaction")]
        public TransactionResponse Transaction { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Erc20Transfers")]
        public IList<Erc20TransferHistoryResponse> Erc20Transfers { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Transaction != null)
            {
                Transaction.Validate();
            }
            if (Erc20Transfers != null)
            {
                foreach (var element in Erc20Transfers)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
        }
    }
}
