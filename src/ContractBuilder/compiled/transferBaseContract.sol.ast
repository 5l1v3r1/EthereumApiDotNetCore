PragmaDirective
   Source: "pragma solidity ^0.4.9;"
ContractDefinition "TransferBaseContract"
   Source: "contract TransferBaseContract {\r\n    address _owner;  \r\n    address _coinAdapterAddress;\r\n\r\n    modifier onlyowner { if (msg.sender == _owner) _; }\r\n\r\n    function TransferBaseContract(address coinAdapterAddress) {        \r\n        _owner = msg.sender;\r\n        _coinAdapterAddress = coinAdapterAddress;\r\n    }\r\n}"
  VariableDeclaration "_owner"
     Type: address
     Source: "address _owner"
    ElementaryTypeName address
       Source: "address"
  VariableDeclaration "_coinAdapterAddress"
     Type: address
     Source: "address _coinAdapterAddress"
    ElementaryTypeName address
       Source: "address"
  ModifierDefinition "onlyowner"
     Source: "modifier onlyowner { if (msg.sender == _owner) _; }"
    ParameterList
       Source: ""
    Block
       Source: "{ if (msg.sender == _owner) _; }"
      IfStatement
         Source: "if (msg.sender == _owner) _"
        BinaryOperation using operator ==
           Type: bool
           Source: "msg.sender == _owner"
          MemberAccess to member sender
             Type: address
             Source: "msg.sender"
            Identifier msg
               Type: msg
               Source: "msg"
          Identifier _owner
             Type: address
             Source: "_owner"
        PlaceholderStatement
           Source: "_"
  FunctionDefinition "TransferBaseContract" - public
     Source: "function TransferBaseContract(address coinAdapterAddress) {        \r\n        _owner = msg.sender;\r\n        _coinAdapterAddress = coinAdapterAddress;\r\n    }"
    ParameterList
       Source: "(address coinAdapterAddress)"
      VariableDeclaration "coinAdapterAddress"
         Type: address
         Source: "address coinAdapterAddress"
        ElementaryTypeName address
           Source: "address"
    ParameterList
       Source: ""
    Block
       Source: "{        \r\n        _owner = msg.sender;\r\n        _coinAdapterAddress = coinAdapterAddress;\r\n    }"
      ExpressionStatement
         Source: "_owner = msg.sender"
        Assignment using operator =
           Type: address
           Source: "_owner = msg.sender"
          Identifier _owner
             Type: address
             Source: "_owner"
          MemberAccess to member sender
             Type: address
             Source: "msg.sender"
            Identifier msg
               Type: msg
               Source: "msg"
      ExpressionStatement
         Source: "_coinAdapterAddress = coinAdapterAddress"
        Assignment using operator =
           Type: address
           Source: "_coinAdapterAddress = coinAdapterAddress"
          Identifier _coinAdapterAddress
             Type: address
             Source: "_coinAdapterAddress"
          Identifier coinAdapterAddress
             Type: address
             Source: "coinAdapterAddress"
