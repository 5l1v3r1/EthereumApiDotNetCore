PragmaDirective
   Source: "pragma solidity ^0.4.9;"
ImportDirective "./coin.sol"
   Source: "import \"./coin.sol\";"
ImportDirective "./transferBaseContract.sol"
   Source: "import \"./transferBaseContract.sol\";"
ContractDefinition "EthTransferContract"
   Source: "contract EthTransferContract is TransferBaseContract {\r\n\r\n    modifier onlyowner { if (msg.sender == _owner) _; }\r\n\r\n    function EthTransferContract(address userAddress, address coinAdapterAddress) TransferBaseContract(userAddress, coinAdapterAddress) {        \r\n    }\r\n\r\n    function() payable {\r\n    }\r\n\r\n    function cashin() onlyowner {\r\n        if (this.balance <= 0) {\r\n            throw;\r\n        }\r\n\r\n        var coin_contract = Coin(_coinAdapterAddress);\r\n        coin_contract.cashin.value(this.balance)(_userAddress, this.balance);\r\n    }\r\n}"
  InheritanceSpecifier
     Source: "TransferBaseContract"
    UserDefinedTypeName "TransferBaseContract"
       Source: "TransferBaseContract"
  ModifierDefinition "onlyowner"
     Source: "modifier onlyowner { if (msg.sender == _owner) _; }"
    ParameterList
       Source: ""
    Block
       Source: "{ if (msg.sender == _owner) _; }"
      IfStatement
         Source: "if (msg.sender == _owner) _"
        BinaryOperation using operator ==
           Type: bool
           Source: "msg.sender == _owner"
          MemberAccess to member sender
             Type: address
             Source: "msg.sender"
            Identifier msg
               Type: msg
               Source: "msg"
          Identifier _owner
             Type: address
             Source: "_owner"
        PlaceholderStatement
           Source: "_"
  FunctionDefinition "EthTransferContract" - public
     Source: "function EthTransferContract(address userAddress, address coinAdapterAddress) TransferBaseContract(userAddress, coinAdapterAddress) {        \r\n    }"
    ParameterList
       Source: "(address userAddress, address coinAdapterAddress)"
      VariableDeclaration "userAddress"
         Type: address
         Source: "address userAddress"
        ElementaryTypeName address
           Source: "address"
      VariableDeclaration "coinAdapterAddress"
         Type: address
         Source: "address coinAdapterAddress"
        ElementaryTypeName address
           Source: "address"
    ParameterList
       Source: ""
    ModifierInvocation "TransferBaseContract"
       Source: "TransferBaseContract(userAddress, coinAdapterAddress)"
      Identifier TransferBaseContract
         Type: type(contract TransferBaseContract)
         Source: "TransferBaseContract"
      Identifier userAddress
         Type: address
         Source: "userAddress"
      Identifier coinAdapterAddress
         Type: address
         Source: "coinAdapterAddress"
    Block
       Source: "{        \r\n    }"
  FunctionDefinition "" - public
     Source: "function() payable {\r\n    }"
    ParameterList
       Source: "()"
    ParameterList
       Source: ""
    Block
       Source: "{\r\n    }"
  FunctionDefinition "cashin" - public
     Source: "function cashin() onlyowner {\r\n        if (this.balance <= 0) {\r\n            throw;\r\n        }\r\n\r\n        var coin_contract = Coin(_coinAdapterAddress);\r\n        coin_contract.cashin.value(this.balance)(_userAddress, this.balance);\r\n    }"
    ParameterList
       Source: "()"
    ParameterList
       Source: ""
    ModifierInvocation "onlyowner"
       Source: "onlyowner"
      Identifier onlyowner
         Type: modifier ()
         Source: "onlyowner"
    Block
       Source: "{\r\n        if (this.balance <= 0) {\r\n            throw;\r\n        }\r\n\r\n        var coin_contract = Coin(_coinAdapterAddress);\r\n        coin_contract.cashin.value(this.balance)(_userAddress, this.balance);\r\n    }"
      IfStatement
         Source: "if (this.balance <= 0) {\r\n            throw;\r\n        }"
        BinaryOperation using operator <=
           Type: bool
           Source: "this.balance <= 0"
          MemberAccess to member balance
             Type: uint256
             Source: "this.balance"
            Identifier this
               Type: contract EthTransferContract
               Source: "this"
          Literal, token: [no token] value: 0
             Type: int_const 0
             Source: "0"
        Block
           Source: "{\r\n            throw;\r\n        }"
          Throw
             Source: "throw"
      VariableDeclarationStatement
         Source: "var coin_contract = Coin(_coinAdapterAddress)"
        VariableDeclaration "coin_contract"
           Type: contract Coin
           Source: "var coin_contract"
        FunctionCall
           Type: contract Coin
           Source: "Coin(_coinAdapterAddress)"
          Identifier Coin
             Type: type(contract Coin)
             Source: "Coin"
          Identifier _coinAdapterAddress
             Type: address
             Source: "_coinAdapterAddress"
      ExpressionStatement
         Source: "coin_contract.cashin.value(this.balance)(_userAddress, this.balance)"
        FunctionCall
           Type: tuple()
           Source: "coin_contract.cashin.value(this.balance)(_userAddress, this.balance)"
          FunctionCall
             Type: function (address,uint256) payable external
             Source: "coin_contract.cashin.value(this.balance)"
            MemberAccess to member value
               Type: function (uint256) returns (function (address,uint256) payable external)
               Source: "coin_contract.cashin.value"
              MemberAccess to member cashin
                 Type: function (address,uint256) payable external
                 Source: "coin_contract.cashin"
                Identifier coin_contract
                   Type: contract Coin
                   Source: "coin_contract"
            MemberAccess to member balance
               Type: uint256
               Source: "this.balance"
              Identifier this
                 Type: contract EthTransferContract
                 Source: "this"
          Identifier _userAddress
             Type: address
             Source: "_userAddress"
          MemberAccess to member balance
             Type: uint256
             Source: "this.balance"
            Identifier this
               Type: contract EthTransferContract
               Source: "this"
